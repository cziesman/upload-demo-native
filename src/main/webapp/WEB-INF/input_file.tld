<?xml version="1.0" encoding="UTF-8"?>
<taglib xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://java.sun.com/xml/ns/javaee"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
        version="2.1">

<!-- ============== Tag Library Description Elements ============= -->

    <description>
        This tag library contains a JavaServer Faces component tag for the inputFile component.
    </description>
    <tlib-version>
        1.0
    </tlib-version>
    <short-name>
        h
    </short-name>
    <uri>
        http://redhat.com/jsf/inputfile
    </uri>

<!-- ============== Tag Library Validator ============= -->

    <validator>
        <validator-class>
            com.sun.faces.taglib.html_basic.HtmlBasicValidator
        </validator-class>
    </validator>

<!-- ===================== HTML 4.0 basic tags ====================== -->

    <tag>
        <description>
            <![CDATA[<p"><span>Renders</span>
            an HTML "input" element of "type" "file". The standard HTML_BASIC
            RenderKit specifies behavior that assumes Servlet 3.0 or later.
            Portlet implementations must override this implementation with a
            semantically equivalent one that functions under the constraints
            of the Portlet specification.</p>
            
            <div>
            
            <p><a name="decode">Decode Behavior</a></p>
            
            <ul>
            
            <p>Obtain the <code>Map</code> from the "requestParameterMap"
            property of the <code>ExternalContext</code>.  If the
            <code>Map</code> contains an entry for the "clientId" of the
            component, pass the value of the entry to the
            <code>setSubmittedValue()</code> method of the component, which
            must be an instance of <code>EditableValueHolder</code>, and
            return.  Otherwise, obtain the "request" property from the
            <code>ExternalContext</code> and cast it to
            <code>javax.servlet.http.HttpServletRequest</code>.  Call
            <code>getParts()</code> on the httpServletRequest. Iterate over
            the parts.  If the "name" property of the current part is equal to
            the "clientId", pass the current part to the
            <code>setSubmittedValue()</code> method of the component.  If an
            exception is thrown during the iteration, log the exception and
            continue.</p>
            
            <p>The standard implementation must override the
            <code>getConvertedValue()</code> so that it simply returns the
            <code>submittedValue</code> argument.</p>
            
            <p>Any exception thrown when interacting with the underlying
            multi-part API must be wrapped in a <code>FacesException</code>
            and allowed to reach the <code>ExceptionHandler</code>.</p>
            
            </ul>
            
            <p>Encode Behavior</p>
            
            <ul>
            
            <p> Render the clientId of the component as the value of the
            "name" attribute.  Do not render the "value" attribute.  If the
            "styleClass" attribute is specified, render its value as the value
            of the "class" attribute.  </p>
            
            <p>If <code>ProjectStage</code> is not
            <code>ProjectStage.Production</code>, verify that the enclosing
            form has an <code>enctype</code> attribute whose value is
            <code>multipart/form-data</code>.  If not, add a
            <code>FacesMessage</code> for this component's clientId to the
            <code>FacesContext</code> stating that file upload requires a form
            with <code>enctype</code> equal to
            <code>multipart/form-data</code>.  If <code>ProjectStage</code>
            <strong>is</strong> <code>ProjectStage.Production</code>, do not
            do this verification.</p>
            
            </ul>
            
            </div>]]>
        </description>
        <name>
            inputFile
        </name>
        <tag-class>
            com.redhat.faces.tag.InputFileTag
        </tag-class>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>
                <![CDATA[Converter instance registered with this component.]]>
            </description>
            <name>
                converter
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    javax.faces.convert.Converter
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A ValueExpression enabled attribute that, if present, will be
                used as the text of the converter message, replacing any message
                that comes from the converter.]]>
            </description>
            <name>
                converterMessage
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The component identifier for this component.  This value must be
                unique within the closest parent component that is a naming
                container.]]>
            </description>
            <name>
                id
            </name>
            <required>
                false
            </required>
            <rtexprvalue>
                true
            </rtexprvalue>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating that this component's value must be
                converted and validated immediately (that is, during
                Apply Request Values phase), rather than waiting
                until Process Validations phase.]]>
            </description>
            <name>
                immediate
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating whether or not this component should be rendered
                (during Render Response Phase), or processed on any subsequent
                form submit.  The default value for this property is true.]]>
            </description>
            <name>
                rendered
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating that the user is required to provide a submitted
                value for this input component.]]>
            </description>
            <name>
                required
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A ValueExpression enabled attribute that, if present, will be
                used as the text of the validation message for the "required"
                facility, if the "required" facility is used.]]>
            </description>
            <name>
                requiredMessage
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[MethodExpression representing a validator method that will be called
                during Process Validations to perform correctness checks on the
                value of this component.  The expression must evaluate to a public
                method that takes FacesContext, UIComponent, and Object parameters,
                with a return type of void.]]>
            </description>
            <name>
                validator
            </name>
            <required>
                false
            </required>
            <deferred-method>
                <method-signature>
                    void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
                </method-signature>
            </deferred-method>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A ValueExpression enabled attribute that, if present, will be
                used as the text of the validator message, replacing any
                message that comes from the validator.]]>
            </description>
            <name>
                validatorMessage
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The current value of this component.]]>
            </description>
            <name>
                value
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.Object
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[<p>
                
                MethodExpression representing a value change listener method
                that will be notified when a new value has been set for this
                input component.  The expression must evaluate to a public
                method that takes a <code>ValueChangeEvent</code> parameter,
                with a return type of void, or
                to a public method that takes no arguments with a return type
                of void.  In the latter case, the method has no way of easily
                knowing what the new value is, but this can be useful in cases
                where a notification is needed that "this value
                changed".
                
                </p>]]>
            </description>
            <name>
                valueChangeListener
            </name>
            <required>
                false
            </required>
            <deferred-method>
                <method-signature>
                    void valueChange(javax.faces.event.ValueChangeEvent)
                </method-signature>
            </deferred-method>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Access key that, when pressed, transfers focus
                to this element.]]>
            </description>
            <name>
                accesskey
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Alternate textual description of the
                element rendered by this component.]]>
            </description>
            <name>
                alt
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If the value of this attribute is "off", render "off" as the value
                of the attribute. This indicates that the  browser should
                disable its autocomplete feature for this component.  This is
                useful for components that perform autocompletion and do not
                want the browser interfering.  If this attribute is not set or the value
                is "on", render nothing.]]>
            </description>
            <name>
                autocomplete
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Direction indication for text that does not inherit directionality.
                Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).
                These attributes are case sensitive when rendering to XHTML, so
                care must be taken to have the correct case.]]>
            </description>
            <name>
                dir
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating that this element must never receive focus or
                be included in a subsequent submit.  A value of false causes
                no attribute to be rendered, while a value of true causes the
                attribute to be rendered as disabled="disabled".]]>
            </description>
            <name>
                disabled
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A localized user presentable name for this component.]]>
            </description>
            <name>
                label
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Code describing the language used in the generated markup
                for this component.]]>
            </description>
            <name>
                lang
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The maximum number of characters that may
                be entered in this field.]]>
            </description>
            <name>
                maxlength
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    int
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when this element loses focus.]]>
            </description>
            <name>
                onblur
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when this element loses focus
                and its value has been modified since gaining focus.]]>
            </description>
            <name>
                onchange
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                clicked over this element.]]>
            </description>
            <name>
                onclick
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                double clicked over this element.]]>
            </description>
            <name>
                ondblclick
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when this element receives focus.]]>
            </description>
            <name>
                onfocus
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a key is
                pressed down over this element.]]>
            </description>
            <name>
                onkeydown
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a key is
                pressed and released over this element.]]>
            </description>
            <name>
                onkeypress
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a key is
                released over this element.]]>
            </description>
            <name>
                onkeyup
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                pressed down over this element.]]>
            </description>
            <name>
                onmousedown
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                moved within this element.]]>
            </description>
            <name>
                onmousemove
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                moved away from this element.]]>
            </description>
            <name>
                onmouseout
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                moved onto this element.]]>
            </description>
            <name>
                onmouseover
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                released over this element.]]>
            </description>
            <name>
                onmouseup
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when text within this
                element is selected by the user.]]>
            </description>
            <name>
                onselect
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating that this component will prohibit changes by
                the user.  The element may receive focus unless it has also
                been disabled.  A value of false causes
                no attribute to be rendered, while a value of true causes the
                attribute to be rendered as readonly="readonly".]]>
            </description>
            <name>
                readonly
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[<p>Per the WAI-ARIA spec and its
                relationship to HTML5 (Section title ARIA Role Attriubute),
                every HTML element may have a "role" attribute whose value
                must be passed through unmodified on the element on which it
                is declared in the final rendered markup.  The attribute, if
                specified, must have a value that is a string literal that is,
                or an EL Expression that evaluates to, a set of
                space-separated tokens representing the various WAI-ARIA roles
                that the element belongs to.
                </p>
                
                <p>It is the page author's
                responsibility to ensure that the user agent is capable of
                correctly interpreting the value of this attribute.</p>]]>
            </description>
            <name>
                role
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The number of characters used to determine
                the width of this field.]]>
            </description>
            <name>
                size
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    int
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[CSS style(s) to be applied when this component is rendered.]]>
            </description>
            <name>
                style
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Space-separated list of CSS style class(es) to be applied when
                this element is rendered.  This value must be passed through
                as the "class" attribute on generated markup.]]>
            </description>
            <name>
                styleClass
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Position of this element in the tabbing order
                for the current document.  This value must be
                an integer between 0 and 32767.]]>
            </description>
            <name>
                tabindex
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Advisory title information about markup elements generated
                for this component.]]>
            </description>
            <name>
                title
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                The ValueExpression linking this component to a property in a backing bean
            </description>
            <name>
                binding
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    javax.faces.component.UIComponent
                </type>
            </deferred-value>
        </attribute>
    </tag>
</taglib>
